<?xml version="1.0" encoding="UTF-8"?>
<project name="RestFixture.metrics" default="all" basedir=".">

	<property file="properties/${properties}.properties" />
	<property file="properties/${user.name}.properties" />


	<target name="inherit.properties" if="inherit.properties">
		<property name="reports.dir" value="${reports}" />
		<property name="src.dir" value="${src}" />
		<property name="lib.dir" value="${lib}" />
		<property name="etc.dir" value="${etc}" />
		<property name="build.dir" value="${build}" />
	    <path id="project.classpath" refid="project.classpath" />
	</target>

	<target name="define.properties" unless="inherit.properties">
		<property name="reports.dir" value="build/reports" />
		<property name="src.dir" value="src/main/java" />
		<property name="lib.dir" value="lib" />
		<property name="etc.dir" value="etc" />
		<property name="build.dir" value="build" />
	</target>

	<target name="define.shared.structures" depends="inherit.properties, define.properties">
		<echo message="Using reports.dir: ${reports.dir}" />
		<echo message="Using src.dir: ${src.dir}" />
		<echo message="Using lib.dir: ${reports.dir}" />
		<echo message="Using etc.dir: ${etc.dir}" />
		<echo message="Using build.dir: ${build.dir}" />

		<property name="metrics.lib" value="${lib.dir}/test/metrics" />
		<property name="metrics.config.dir" value="${etc.dir}/metrics" />
		<property name="build.classes.main.dir" value="${build.dir}/classes/main" />
		<property name="metrics.report.dir" value="${reports.dir}/metrics" />

		<property name="checkstyle.report.dir" value="${metrics.report.dir}/checkstyle" />
		<property name="jdepend.report.dir" value="${metrics.report.dir}/jdepend" />
		<property name="findbugs.report.dir" location="${metrics.report.dir}/findbugs" />
		<property name="pmd.report.dir" location="${metrics.report.dir}/pmd" />
		<property name="cpd.report.dir" location="${metrics.report.dir}/cpd" />
		<property name="crap4j.report.dir" location="${metrics.report.dir}/crap4j" />
		<property name="ckjm.report.dir" location="${metrics.report.dir}/ckjm" />

		<path id="metrics.classpath">
			<fileset id="metrics.libs.id" dir="${metrics.lib}">
				<include name="*.jar" />
			</fileset>
		</path>

        <path id="lib.classpath">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar" />
                <!-- captured in metrics.classpath -->
                <exclude name="**/metrics/**/*.jar" />
            </fileset>
        </path>
	</target>

	<target name="all" depends="clean, init, cpd, pmd, findbugs, checkstyle, jdepend, ckjm, crap4j" />

	<target name="init" depends="define.shared.structures">
	</target>

	<target name="clean">
		<delete dir="${metrics.report.dir}" />
	</target>

	<target name="findbugs" depends="init">
		<mkdir dir="${findbugs.report.dir}" />
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${metrics.lib}/findbugs-ant.jar" />
		<findbugs home="${findbugs.home}" output="html" outputFile="${findbugs.report.dir}/findbugs.html" jvmargs="-Xms512M -Xmx512M " excludeFilter="${metrics.config.dir}/findBugs_exclude_filters.xml">
			<sourcePath path="${src.dir}" />
			<class location="${build.classes.main.dir}" />
		</findbugs>
	</target>

	<target name="ckjm" depends="init">
		<!-- Chidamber and Kemerer Java Metrics (see http://www.spinellis.gr/sw/ckjm/) -->
		<mkdir dir="${ckjm.report.dir}" />
		<taskdef name="ckjm" classname="gr.spinellis.ckjm.ant.CkjmTask">
			<classpath>
				<pathelement location="${metrics.lib}/ckjm-1.9.jar" />
			</classpath>
		</taskdef>
		<ckjm outputfile="${ckjm.report.dir}/ckjm.xml" format="xml" classdir="${build.classes.main.dir}">
			<include name="**/*.class" />
			<exclude name="**/*Test.class" />
            <extdirs refid="lib.classpath" />
		</ckjm>
		<xslt in="${ckjm.report.dir}/ckjm.xml" style="${metrics.config.dir}/ckjm.xsl" out="${metrics.report.dir}/ckjm.html" />
		<xslt in="${ckjm.report.dir}/ckjm.xml" style="${metrics.config.dir}/ckjm_extra.xsl" out="${ckjm.report.dir}/ckjm_extra.html" />
	</target>

	<target name="pmd" depends="init">
		<mkdir dir="${pmd.report.dir}" />
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="metrics.classpath" />
		<pmd rulesetfiles="imports,basic">
			<formatter type="html" toFile="${pmd.report.dir}/pmd.html" toConsole="true" />
			<formatter type="xml" toFile="${pmd.report.dir}/pmd.xml" />
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
	</target>

	<target name="cpd" depends="init">
		<mkdir dir="${cpd.report.dir}" />
		<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="metrics.classpath" />
		<cpd minimumTokenCount="4" format="xml" outputFile="${cpd.report.dir}/cpd.xml">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cpd>
		<xslt in="${cpd.report.dir}/cpd.xml" style="${metrics.config.dir}/cpdhtml.xslt" out="${cpd.report.dir}/cpd.html" />
	</target>

	<target name="jdepend" depends="init">
		<mkdir dir="${jdepend.report.dir}" />
		<!-- for this to work add jdepend-x.x.x.jar to your ANT_HOME/lib - note: if run in IDE, it's likely that ANT_HOME is that shipped with the IDE -->
		<jdepend outputfile="${jdepend.report.dir}/jdepend-report.xml" format="xml">
			<classespath>
				<pathelement location="${build.classes.main.dir}" />
			</classespath>
		</jdepend>
		<xslt in="${jdepend.report.dir}/jdepend-report.xml" out="${jdepend.report.dir}/jdepend-report.html" style="${metrics.config.dir}/jdepend.xsl" />
	</target>

	<target name="checkstyle" depends="init" description="Generates a report of code convention violations.">
		<mkdir dir="${checkstyle.report.dir}" />
		<taskdef resource="checkstyletask.properties" classpathref="metrics.classpath" />
		<checkstyle config="${metrics.config.dir}/restfixture_checkstyle.xml" failureProperty="checkstyle.failure" failOnViolation="false" classpathref="metrics.classpath">
			<formatter type="xml" tofile="${checkstyle.report.dir}/checkstyle_report.xml" />
			<fileset dir="${src.dir}" includes="**/*.java" />
		</checkstyle>

		<xslt in="${checkstyle.report.dir}/checkstyle_report.xml" out="${checkstyle.report.dir}/checkstyle_report.html" style="${metrics.config.dir}/checkstyle-noframes-sorted.xsl" />
	</target>

	<target name="crap4j" depends="init">
		<mkdir dir="${crap4j.report.dir}" />
		<echo message="version 1.1.6 of Crap4j doesn't work on Windows - using patched version included in RestFixture/${metrics.lib}/crap4j" />
		<property name="crap4j.home" value="${metrics.lib}/crap4j" />

		<taskdef name="crap4j" classname="org.crap4j.anttask.Crap4jAntTask">
			<classpath>
				<fileset dir="${crap4j.home}/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</taskdef>

		<!-- patch allows passing crap4j.home to the task -->
		<crap4j crap4jhome="${crap4j.home}" projectdir="${basedir}" outputDir="${crap4j.report.dir}" dontTest="false" debug="true">
			<classes>
				<pathElement location="${build.dir}/classes/main" />
			</classes>

			<srces>
				<!-- The project's src folders -->
				<pathElement location="${src.dir}/main/java" />
				<pathElement location="${src.dir}/test/java" />
			</srces>

			<testClasses>
				<pathElement location="${build.dir}/classes/unit" />
			</testClasses>

			<libClasspath>
				<!-- Put the dependent paths and libraries here. 
                         This is for stuff necessary to your project, but not stuff you want analyzed -->
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<!-- if you get errors loading any agitar classes, like the mock classes, add this entry - ->
				<fileset dir="${crap4j.home}/lib/com.agitar.eclipse.api_4.2.0.401405/lib/ext">
					<include name="**/*.jar" />
				</fileset -->
			</libClasspath>
		</crap4j>
	</target>

</project>